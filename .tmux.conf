# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 3
bind + resize-pane -U 3

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style key bindings in copy and selection modes.
setw -g mode-keys vi

# vi-style key bindings for command prompt in the status line.
set -g status-keys vi

# $Id: vim-keys.conf, End $

# set TERM env var to 256 color terminal.
set -g default-terminal "screen-256color"

# set max scrollback history lines.
set -g history-limit 65536

# enlarge the status line messages and other on-screen indicators display time. (default 750 ms)
set -g display-time 3000

# set window and pane index to 1. (default 0)
set -g base-index 1
setw -g pane-base-index 1

# shorten command delay. (default 500 ms)
set -sg escape-time 0

# enable focus events for terminals that supported them,
# and passed through to applications running in tmux.
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup.
setw -g aggressive-resize on

# set prefix-R to reload ~/.tmux.conf.
bind R source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

# set prefix-v to begin selection as in Vim.
bind -t vi-copy v begin-selection

# set prefix-y to copy selection as in Vim.
bind -t vi-copy y copy-selection

# set pane board colors for active and inactive panes.
set -g pane-border-fg colour238
set -g pane-active-border-fg colour244

# Monitor and highlight the window activity in the status line.
setw -g monitor-activity on
#set -g visual-activity on

# auto window rename.
#setw -g automatic-rename

# set status line position. [top|bottom] (default: bottom)
#set -g status-position top
set -g status-position bottom

# set status line colors.
set -g status-bg colour235
set -g status-fg yellow
set -g status-attr dim

# set inactive window list colors in the status line.
setw -g window-status-fg brightblue
setw -g window-status-bg colour237
setw -g window-status-attr dim

# set active window list colors in the status line.
setw -g window-status-current-fg brightcyan
setw -g window-status-current-bg colour237
setw -g window-status-current-attr bright

# status line - right side.
set -g status-right-length 50
set -g status-right "#{prefix_highlight} #{continuum_status} #h"

# status line - left side.
set -g status-left-length 50
set -g status-left "[#S] [#I:#P] "

# make new window/pane keep in same path as current pane. (need tmux v1.9+)
# ref: https://github.com/edkolev/dots/blob/master/tmux.conf
_tmux_ge_1_9='[[ "$(tmux -V)" = "$(echo -e "$(tmux -V)\n1.9" | sort -rV | head -n1)" ]]'
if "$_tmux_ge_1_9" "unbind c; bind c new-window -c '#{pane_current_path}'"
if "$_tmux_ge_1_9" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if "$_tmux_ge_1_9" "unbind %; bind % split-window -h -c '#{pane_current_path}'"
if "$_tmux_ge_1_9" "unbind s; bind s split-window -v -c '#{pane_current_path}'"
if "$_tmux_ge_1_9" "unbind v; bind v split-window -h -c '#{pane_current_path}'"

# smart pane switching with awareness of vim splits.
# (the key bindings must be synced with vim plugin 'vim-tmux-navigator')
_is_vim="echo '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$'"
bind h if "$_is_vim" "send-keys C-b; send-keys C-h" "select-pane -L"
bind j if "$_is_vim" "send-keys C-b; send-keys C-j" "select-pane -D"
bind k if "$_is_vim" "send-keys C-b; send-keys C-k" "select-pane -U"
bind l if "$_is_vim" "send-keys C-b; send-keys C-l" "select-pane -R"
bind \ if "$_is_vim" "send-keys C-b; send-keys C-\\" "select-pane -l"

# move window.
bind u swap-window -t -1
bind i swap-window -t +1

# toggle mouse mode. (work on both tmux v2.0- and v2.1+)
# ref: http://qiita.com/kawaz/items/7b15e18ca8e072c1dc57
# note: "mouse-utf8" option has been removed on tmux v2.2.
_tmux_le_2_0='[[ "$(tmux -V)" = "$(echo -e "$(tmux -V)\n2.0" | sort -V | head -n1)" ]]'
_tmux_ge_2_1='[[ "$(tmux -V)" = "$(echo -e "$(tmux -V)\n2.1" | sort -rV | head -n1)" ]]'
if "$_tmux_le_2_0" 'setw -g mode-mouse off; set -g mouse-utf8 off; set -g mouse-resize-pane off; set -g mouse-select-pane off; set -g mouse-select-window off'
if "$_tmux_ge_2_1" 'set -g mouse off'
if "$_tmux_le_2_0" 'bind e if "tmux show -gwv mode-mouse | grep off" "display \"mouse: on\";  set -gq mouse-utf8 on;  set -gq mouse-resize-pane on;  set -gq mouse-select-pane on;  set -gq mouse-select-window on;  setw -g mode-mouse on" "display \"mouse: off\"; set -gq mouse-utf8 off; set -gq mouse-resize-pane off; set -gq mouse-select-pane off; set -gq mouse-select-window off; setw -g mode-mouse off"'
if "$_tmux_ge_2_1" 'bind e if "tmux show -gv mouse | grep off" "display \"mouse: ON\";  set -g mouse on" "display \"mouse: OFF\"; set -g mouse off"'

# installed plugins managed by tpm. (tmux plugin manager)
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-yank"
set -g @plugin "tmux-plugins/tmux-copycat"
set -g @plugin "tmux-plugins/tmux-open"
set -g @plugin "tmux-plugins/tmux-pain-control"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-prefix-highlight"

# tmux-resurrect plugin settings
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents on

# tmux-continuum plugin settings.
set -g @continuum-save-interval 20
#set -g @continuum-boot on # auto-restore when tmux started.

# tmux-prefix-highlight plugin settings.
set -g @prefix_highlight_show_copy_mode on
set -g @prefix_highlight_copy_mode_attr 'fg=colour235,bg=yellow,bold' # (default: 'fg=default,bg=yellow')
set -g @prefix_highlight_fg colour237  # (default: colour231)
set -g @prefix_highlight_bg brightblue # (default: colour04)

# initial tpm. (keep this line at the very bottom of tmux.conf)
run "~/.tmux/plugins/tpm/tpm"
